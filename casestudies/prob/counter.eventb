package(load_event_b_project([event_b_model(none,
     'CounterM',
     [sees(none,
        []),
      variables(none,
        [identifier(none,
           x)]),
      invariant(none,
        [member(rodinpos(inv1,
             internal_inv1),
           identifier(none,
             x),
           integer_set(none)),
         greater_equal(rodinpos(inv2,
             internal_inv2),
           identifier(none,
             x),
           integer(none,
             0))]),
      theorems(none,
        []),
      events(none,
        [event(rodinpos('INITIALISATION',
             internal_evt11),
           'INITIALISATION',
           [],
           [],
           [],
           [assign(rodinpos(act1,
                internal_act1),
              [identifier(none,
                 x)],
              [integer(none,
                 0)])],
           []),
         event(rodinpos(up,
             internal_evt12),
           up,
           [],
           [],
           [less(rodinpos(grd1,
                internal_grd1),
              identifier(none,
                x),
              integer(none,
                10))],
           [assign(rodinpos(act1,
                internal_act1),
              [identifier(none,
                 x)],
              [add(none,
                 identifier(none,
                   x),
                 integer(none,
                   1))])],
           []),
         event(rodinpos(down,
             internal_evt13),
           down,
           [],
           [],
           [greater(rodinpos(grd1,
                internal_grd1),
              identifier(none,
                x),
              integer(none,
                0))],
           [assign(rodinpos(act1,
                internal_act1),
              [identifier(none,
                 x)],
              [minus(none,
                 identifier(none,
                   x),
                 integer(none,
                   1))])],
           [])])])],
  [],
  [discharged('CounterM',
     'INITIALISATION',
     internal_inv2),
   discharged('CounterM',
     up,
     internal_inv2),
   discharged('CounterM',
     down,
     internal_inv2)],
  Error)).
